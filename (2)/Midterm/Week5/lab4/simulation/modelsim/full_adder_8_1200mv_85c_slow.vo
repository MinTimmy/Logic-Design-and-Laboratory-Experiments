// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "11/08/2020 11:45:31"

// 
// Device: Altera EP3C10E144C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module full_adder (
	F1,
	F2,
	D);
output 	F1;
output 	F2;
input 	[2:0] D;

// Design Ports Information
// F1	=>  Location: PIN_44,	 I/O Standard: 2.5 V,	 Current Strength: Default
// F2	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[0]	=>  Location: PIN_24,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[1]	=>  Location: PIN_25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[2]	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("full_adder_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \F1~output_o ;
wire \F2~output_o ;
wire \D[2]~input_o ;
wire \D[0]~input_o ;
wire \D[1]~input_o ;
wire \WideOr0~0_combout ;
wire \WideOr1~0_combout ;


// Location: IOOBUF_X5_Y0_N16
cycloneiii_io_obuf \F1~output (
	.i(\WideOr0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F1~output_o ),
	.obar());
// synopsys translate_off
defparam \F1~output .bus_hold = "false";
defparam \F1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N23
cycloneiii_io_obuf \F2~output (
	.i(\WideOr1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F2~output_o ),
	.obar());
// synopsys translate_off
defparam \F2~output .bus_hold = "false";
defparam \F2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneiii_io_ibuf \D[2]~input (
	.i(D[2]),
	.ibar(gnd),
	.o(\D[2]~input_o ));
// synopsys translate_off
defparam \D[2]~input .bus_hold = "false";
defparam \D[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneiii_io_ibuf \D[0]~input (
	.i(D[0]),
	.ibar(gnd),
	.o(\D[0]~input_o ));
// synopsys translate_off
defparam \D[0]~input .bus_hold = "false";
defparam \D[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneiii_io_ibuf \D[1]~input (
	.i(D[1]),
	.ibar(gnd),
	.o(\D[1]~input_o ));
// synopsys translate_off
defparam \D[1]~input .bus_hold = "false";
defparam \D[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N8
cycloneiii_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = \D[2]~input_o  $ (\D[0]~input_o  $ (\D[1]~input_o ))

	.dataa(\D[2]~input_o ),
	.datab(\D[0]~input_o ),
	.datac(gnd),
	.datad(\D[1]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'h9966;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N18
cycloneiii_lcell_comb \WideOr1~0 (
// Equation(s):
// \WideOr1~0_combout  = (\D[2]~input_o  & ((\D[0]~input_o ) # (\D[1]~input_o ))) # (!\D[2]~input_o  & (\D[0]~input_o  & \D[1]~input_o ))

	.dataa(\D[2]~input_o ),
	.datab(\D[0]~input_o ),
	.datac(gnd),
	.datad(\D[1]~input_o ),
	.cin(gnd),
	.combout(\WideOr1~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr1~0 .lut_mask = 16'hEE88;
defparam \WideOr1~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign F1 = \F1~output_o ;

assign F2 = \F2~output_o ;

endmodule
